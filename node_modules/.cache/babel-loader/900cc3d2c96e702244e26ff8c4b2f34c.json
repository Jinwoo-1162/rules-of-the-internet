{"ast":null,"code":"var _jsxFileName = \"/Users/jinwoopark/Desktop/rules-of-internet/src/Components/QuoteMaker.js\",\n    _s = $RefreshSig$();\n\nimport react, { useEffect, useState } from 'react';\nimport { getQuote } from '../services';\nimport style from './CSS/QuoteMaker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const QuoteMaker = props => {\n  _s();\n\n  let [quote, setQuote] = useState('generating...');\n  let [author, setAuthor] = useState('');\n  let [generating, setGenerating] = useState(false);\n  useEffect(async () => {\n    const data = await getQuote();\n    console.log(data.content);\n    setQuote(data.content);\n    setAuthor(\"- \" + data.author);\n    setGenerating(false);\n  }, []);\n\n  const generateQuote = () => {\n    setQuote(\"generating...\");\n    setAuthor('');\n    const generatingTimeout = setTimeout(() => {\n      window.location.reload();\n    }, 1000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"quote\",\n      children: quote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"author\",\n      children: author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"generate\",\n      onClick: generateQuote,\n      children: \"Generate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuoteMaker, \"JPvEDFI48+OUcV/YnBPTTL1TUrw=\");\n\n_c = QuoteMaker;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteMaker\");","map":{"version":3,"sources":["/Users/jinwoopark/Desktop/rules-of-internet/src/Components/QuoteMaker.js"],"names":["react","useEffect","useState","getQuote","style","QuoteMaker","props","quote","setQuote","author","setAuthor","generating","setGenerating","data","console","log","content","generateQuote","generatingTimeout","setTimeout","window","location","reload"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;;AAEA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AACjC,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,eAAD,CAAhC;AACA,MAAI,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAAlC;AACA,MAAI,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,YAAY;AAClB,UAAMY,IAAI,GAAG,MAAMV,QAAQ,EAA3B;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,OAAjB;AACAR,IAAAA,QAAQ,CAACK,IAAI,CAACG,OAAN,CAAR;AACAN,IAAAA,SAAS,CAAC,OAAOG,IAAI,CAACJ,MAAb,CAAT;AACAG,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMK,aAAa,GAAG,MAAM;AACxBT,IAAAA,QAAQ,CAAC,eAAD,CAAR;AACAE,IAAAA,SAAS,CAAC,EAAD,CAAT;AACA,UAAMQ,iBAAiB,GAAGC,UAAU,CAAC,MAAM;AACvCC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,KAFmC,EAEjC,IAFiC,CAApC;AAGH,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACI;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA,gBAA0Bf;AAA1B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,SAAS,EAAC,QAAjB;AAAA,gBAA2BE;AAA3B;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAQ,MAAA,SAAS,EAAC,UAAlB;AAA6B,MAAA,OAAO,EAAEQ,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA9BM;;GAAMZ,U;;KAAAA,U","sourcesContent":["import react, { useEffect, useState } from 'react';\nimport {getQuote} from '../services';\nimport style from './CSS/QuoteMaker.css';\n\nexport const QuoteMaker = (props) => {\n    let [quote, setQuote] = useState('generating...');\n    let [author, setAuthor] = useState('');\n    let [generating, setGenerating] = useState(false);\n\n    useEffect(async () => {\n        const data = await getQuote();\n        console.log(data.content);\n        setQuote(data.content);\n        setAuthor(\"- \" + data.author);\n        setGenerating(false);\n    }, []);\n\n    const generateQuote = () => {\n        setQuote(\"generating...\");\n        setAuthor('');\n        const generatingTimeout = setTimeout(() => {\n            window.location.reload();\n        }, 1000);\n    }\n\n    return(\n        <div className=\"space\">\n            <label className=\"quote\">{quote}</label>\n            <label className=\"author\">{author}</label>\n            <br />\n            <br />\n            <button className=\"generate\" onClick={generateQuote}>Generate</button>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}