{"ast":null,"code":"var _jsxFileName = \"/Users/jinwoopark/Desktop/rules-of-internet/src/Components/NavBar.js\";\nimport React from 'react';\nimport styling from './CSS/NavBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NavBar = props => {\n  let bool = true;\n\n  function reset() {\n    var button = document.getElementById('meme');\n    var labeled = document.getElementsByClassName('press')[0];\n    console.log(button.style.animation);\n    console.log(labeled.getElementsByTagName(\"label\")[0].innerHTML);\n    labeled.getElementsByTagName(\"label\")[0].innerHTML = bool ? \"0\" : \"meme\";\n    button.style.height = bool ? \"10ch\" : \"40ch\";\n    bool = !bool; // button.style.animation = 'none';\n    // button.style.animation = '';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"color-shift\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"meme\",\n      className: \"press\",\n      onClick: reset,\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Press me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 65\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_c = NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/Users/jinwoopark/Desktop/rules-of-internet/src/Components/NavBar.js"],"names":["React","styling","NavBar","props","bool","reset","button","document","getElementById","labeled","getElementsByClassName","console","log","style","animation","getElementsByTagName","innerHTML","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AAEA,OAAO,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAC7B,MAAIC,IAAI,GAAG,IAAX;;AACA,WAASC,KAAT,GAAiB;AACb,QAAIC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAb;AACA,QAAIC,OAAO,GAAGF,QAAQ,CAACG,sBAAT,CAAgC,OAAhC,EAAyC,CAAzC,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACO,KAAP,CAAaC,SAAzB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACM,oBAAR,CAA6B,OAA7B,EAAsC,CAAtC,EAAyCC,SAArD;AACAP,IAAAA,OAAO,CAACM,oBAAR,CAA6B,OAA7B,EAAsC,CAAtC,EAAyCC,SAAzC,GAAqDZ,IAAI,GAAG,GAAH,GAAS,MAAlE;AACAE,IAAAA,MAAM,CAACO,KAAP,CAAaI,MAAb,GAAqBb,IAAI,GAAG,MAAH,GAAU,MAAnC;AACAA,IAAAA,IAAI,GAAG,CAACA,IAAR,CAPa,CAQb;AACA;AACH;;AAED,sBACI;AAAK,IAAA,EAAE,EAAC,aAAR;AAAA,2BACI;AAAQ,MAAA,EAAE,EAAC,MAAX;AAAkB,MAAA,SAAS,EAAC,OAA5B;AAAoC,MAAA,OAAO,EAAEC,KAA7C;AAAA,6BAAoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAApD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAnBM;KAAMH,M","sourcesContent":["import React from 'react';\nimport styling from './CSS/NavBar.css';\n\nexport const NavBar = (props) => {\n    let bool = true;\n    function reset() {\n        var button = document.getElementById('meme');\n        var labeled = document.getElementsByClassName('press')[0];\n        console.log(button.style.animation);\n        console.log(labeled.getElementsByTagName(\"label\")[0].innerHTML);\n        labeled.getElementsByTagName(\"label\")[0].innerHTML = bool ? \"0\" : \"meme\";\n        button.style.height= bool ? \"10ch\":\"40ch\"\n        bool = !bool;\n        // button.style.animation = 'none';\n        // button.style.animation = '';\n    }\n\n    return (\n        <div id=\"color-shift\">\n            <button id='meme' className=\"press\" onClick={reset}><label>Press me</label></button>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}